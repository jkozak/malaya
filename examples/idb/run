#!/usr/bin/env node
// -*- mode:javascript -*-

"use strict";

var   argv = require('minimist')(process.argv.slice(2),{
    string:['init','fsync','slave'],
    boolean:['debug'],
    int:['fe3','port'],
    defaults:{fsync:'kludge'} });

var  setup = require('./setup.js');

var server = null;
    
process.on('SIGINT',function() {
    if (server)
        server.close();
    process.exit(1);
});
process.on('SIGQUIT',function() {
    process.exit(1);
});
process.on('SIGHUP',function() {
    server.save();
});
process.on('exit',function(code) {
});

if (argv.slave && false) {
    var prvl = require('../../prevalence.js')();
    var pdir = process.cwd();
    prvl.on('ready',function(syshash) {
        console.log("slaved to: %s",argv.slave);
        console.log("opening hash is: %s",syshash);
        // +++ 
    });
    prvl.on('closed',function(tidy,syshash) {
        if (!tidy) {
            console.log("*** I am the master now");
            prvl.becomeMaster();
            server = setup.build({prevalence:  prvl,
                                  sync_journal:argv.fsync,
                                  debug:       argv.debug,
                                  port:        argv.port,
                                  fe3port:     argv.fe3});
            server.run();
        }
    });
    prvl.replicateFrom(pdir,argv.slave);
} else if (argv.slave) {
    server = setup.build({slave:        argv.slave,
                          prevalenceDir:'.prevalence',
                          sync_journal: argv.fsync,
                          debug:        argv.debug,
                          port:         argv.port,
                          fe3port:      argv.fe3});
    server.run();
} else {
    server = setup.build({init:        argv.init,
                          sync_journal:argv.fsync,
                          debug:       argv.debug,
                          port:        argv.port,
                          fe3port:     argv.fe3});
    server.run();
}
